<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
               xmlns:s="library://ns.adobe.com/flex/spark"
               xmlns:mx="library://ns.adobe.com/flex/mx"
               xmlns:base="turbosqel.components.base.*"
			   addedToStage="added(event)"
			   creationComplete="{fillTree(event)}">
	
	<fx:Script>
		<![CDATA[
		
		/**
		 * 
		 * example of Analize usage .
		 * Analize elements allow to change values / params of objects and call functions .
		 * Each IAnalize object have target param to get/set value .
		 * 
		 * @author turbosqel.pl || Gerard Sławiński
		 * 
		 */
		
		
		import flash.display.MovieClip;
		import flash.events.Event;
		import flash.events.MouseEvent;
		import flash.utils.Dictionary;
		import mx.controls.Tree;
		import mx.events.ItemClickEvent;
		import mx.events.ListEvent;
		import turbosqel.analizer.Analize;
		import turbosqel.analizer.AnalizeEvent;
		import turbosqel.analizerVisual.AnalizeTree;
		import turbosqel.components.base.FlexDisplayObject;
		import turbosqel.console.ConsoleWindow;
		
		
		
		public function added(e:Event):void {
			ConsoleWindow.run(stage);
		};
		
		
		public function fillTree(e:Event):void {
			
			var dic:Dictionary = new Dictionary();
			dic[this] = 123;
			dic[Tree] = "some string";
			var analize:Analize = Analize.parse("t2" , {asd:123 , data:"viuhr" , obj2:{avm1:1 , avm2:2}, obj:{as2:123 , as3:124 , as4:125}});
			
			var analizeTree:FlexDisplayObject = new FlexDisplayObject();
			addElement(analizeTree);
			UObject.apply(analizeTree.addChild(new AnalizeTree()),{x:this.width /2 , width:this.width /2 , height:200 , analize:analize});
			
			
			//
			analize.addEventListener(AnalizeEvent.INVALIDATE , UFunction.delegateEvent(objectDisplay.invalidateList));
			objectDisplay.dataProvider = analize.analize//Analize.parse("test" , {tree:objectDisplay , func:fillTree  , dictionary:dic , mc:new MovieClip,  event:new MouseEvent("asd")} ).analize;
			//<base:FlexDisplayObject id="analizeTree" right="0" width="{this.width /2}" top="0" bottom="0" />
			
		};
		
		protected function clicked(e:ListEvent):void {
			trace(e.target.selectedItem.path,e.target.selectedItem);
		};
		
		]]>
	
	</fx:Script>
	
	
	<mx:Tree id="objectDisplay" labelField="label" left="0" width="400" top="0" bottom="0" itemClick="clicked(event)" ></mx:Tree>
	
</s:Application>